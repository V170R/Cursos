{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","http","Promise","all","obterNegociacaoDaSemana","obterNegociacaoDaSemanaAnterior","obterNegociacaoDaSemanaRetrasada","then","negociacoes","periodos","reduce","dados","periodo","concat","catch","Error","erro","get","map","Date","objeto","data","quantidade","valor","console","log","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","JSON","stringify","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\r\nimport {ConnectionFactory} from './ConnectionFactory';\r\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\r\nimport {Negociacao} from '../models/Negociacao';\r\n\r\nexport class NegociacaoService{\r\n    constructor(){\r\n        this.http = new HttpService();\r\n    }\r\n\r\n    obterNegociacoes(){\r\n        return Promise.all([\r\n            this.obterNegociacaoDaSemana(),\r\n            this.obterNegociacaoDaSemanaAnterior(),\r\n            this.obterNegociacaoDaSemanaRetrasada()\r\n        ]).then(periodos => {\r\n            let negociacoes = periodos.reduce((dados, periodo) => dados.concat(periodo),[]);\r\n            return negociacoes;\r\n        }).catch(erro => {\r\n            throw new Error(erro);\r\n        });\r\n    }\r\n\r\n    obterNegociacaoDaSemana(){\r\n            return this.http.get('negociacoes/semana')\r\n                     .then(negociacoes => {\r\n                         return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n                     })\r\n                     .catch(erro => {\r\n                         console.log(erro);\r\n                         throw new Error('Não foi possível obter as negociações da semana.');\r\n                     });\r\n    }\r\n\r\n    obterNegociacaoDaSemanaAnterior(){\r\n            return this.http.get('negociacoes/anterior')\r\n                     .then(negociacoes =>{\r\n                         console.log(negociacoes);\r\n                         return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n                     })\r\n                     .catch(erro => {\r\n                         console.log(erro);\r\n                         throw new Error('Não foi possível obter as negociações da semana anterior.');\r\n                     });\r\n    }\r\n    \r\n\r\n\r\n    obterNegociacaoDaSemanaRetrasada(){\r\n            return this.http.get('negociacoes/retrasada')\r\n                     .then(negociacoes => {\r\n                         return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n                     })\r\n                     .catch(erro => {\r\n                         console.log(erro);\r\n                         throw new Error('Não foi possível obter as negociações da semana retrasada.');\r\n                     });\r\n    }\r\n\r\n    cadastra(negociacao){\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.adiciona(negociacao))\r\n            .then(() => 'Negociação adicionada com sucesso.')\r\n            .catch(() => {\r\n                console.log(erro);\r\n                throw new Error ('Não foi possível adicionar a negociação')\r\n            });\r\n    }\r\n\r\n    lista(){\r\n        return ConnectionFactory\r\n                .getConnection()\r\n                .then(connection => new NegociacaoDao(connection))\r\n                .then(dao => dao.listaTodos())\r\n                .catch(erro => {\r\n                    console.log(erro);\r\n                    throw new Error('Não foi possível obter as negociações');\r\n                })\r\n    }\r\n\r\n    apaga(){\r\n       return ConnectionFactory\r\n        .getConnection()\r\n        .then(connection => new NegociacaoDao(connection))\r\n        .then(dao => dao.apagaTodos())\r\n        .then(() => 'Negociações apagadas com sucesso')\r\n        .catch(erro => {\r\n            console.log(erro);\r\n            throw new Error('Não foi possível apagar as negociações.')\r\n        })\r\n    }\r\n\r\n    importa(listaAtual){\r\n        return this.obterNegociacoes()\r\n            .then(negociacoes => negociacoes.filter(negociacao => \r\n                !listaAtual.some(negociacaoExistente => \r\n                    JSON.stringify(negociacao) == JSON.stringify(negociacaoExistente)))\r\n            )\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível buscar negociações para importar');\r\n            })\r\n    }\r\n    \r\n}"]}